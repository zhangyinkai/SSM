<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyk.notice.dao.SysNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.zyk.notice.entity.SysNotice" >
    <id column="notice_id" property="noticeId" jdbcType="BIGINT" />
    <result column="notice_title" property="noticeTitle" jdbcType="VARCHAR" />
    <result column="notice_content" property="noticeContent" jdbcType="VARCHAR" />
    <result column="begin_time" property="beginTime" jdbcType="VARCHAR" />
    <result column="over_time" property="overTime" jdbcType="VARCHAR" />
    <result column="force_offline_time" property="forceOfflineTime" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    notice_id, notice_title, notice_content, begin_time, over_time, force_offline_time, 
    status, created_time, updated_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_notice
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_notice
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zyk.notice.entity.SysNotice" >
    insert into sys_notice (notice_id, notice_title, notice_content, 
      begin_time, over_time, force_offline_time, 
      status, created_time, updated_time
      )
    values (#{noticeId,jdbcType=BIGINT}, #{noticeTitle,jdbcType=VARCHAR}, #{noticeContent,jdbcType=VARCHAR}, 
      #{beginTime,jdbcType=VARCHAR}, #{overTime,jdbcType=VARCHAR}, #{forceOfflineTime,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createdTime,jdbcType=VARCHAR}, #{updatedTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zyk.notice.entity.SysNotice" >
    insert into sys_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        notice_id,
      </if>
      <if test="noticeTitle != null" >
        notice_title,
      </if>
      <if test="noticeContent != null" >
        notice_content,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="overTime != null" >
        over_time,
      </if>
      <if test="forceOfflineTime != null" >
        force_offline_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        #{noticeId,jdbcType=BIGINT},
      </if>
      <if test="noticeTitle != null" >
        #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=VARCHAR},
      </if>
      <if test="overTime != null" >
        #{overTime,jdbcType=VARCHAR},
      </if>
      <if test="forceOfflineTime != null" >
        #{forceOfflineTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyk.notice.entity.SysNotice" >
    update sys_notice
    <set >
      <if test="noticeTitle != null" >
        notice_title = #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        notice_content = #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=VARCHAR},
      </if>
      <if test="overTime != null" >
        over_time = #{overTime,jdbcType=VARCHAR},
      </if>
      <if test="forceOfflineTime != null" >
        force_offline_time = #{forceOfflineTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=VARCHAR},
      </if>
    </set>
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyk.notice.entity.SysNotice" >
    update sys_notice
    set notice_title = #{noticeTitle,jdbcType=VARCHAR},
      notice_content = #{noticeContent,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=VARCHAR},
      over_time = #{overTime,jdbcType=VARCHAR},
      force_offline_time = #{forceOfflineTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=VARCHAR}
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </update>
</mapper>